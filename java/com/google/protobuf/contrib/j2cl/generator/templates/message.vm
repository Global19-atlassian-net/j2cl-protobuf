##
## Renders a given message as either an inner or outer class.
##
#set ($static = 'static')
#if ($descriptor.isTopLevelClass())
  #set ($static = '')
package $descriptor.package;
#end

#if ($descriptor.isTopLevelMessage())
  @jsinterop.annotations.JsType(isNative=true, name = "$descriptor.jsName", namespace= "$descriptor.jsNameSpace")
#else
  @jsinterop.annotations.JsType(isNative=true)
#end
public $static final class $descriptor.name extends
com.google.protobuf.GeneratedMessageLite<${descriptor.name}, ${descriptor.name}.Builder> {

## render enums
#foreach ($enumDescriptor in $descriptor.enums)
  #parse ('enum.vm')
#end

## render oneofs
#foreach($oneOfDescriptor in $descriptor.oneOfs)
  #parse ('oneof.vm')
#end

## render nested messages
## Note that 'descriptor' below only overrides the value for the local scope of foreach.
#foreach ($descriptor in $descriptor.messages)
  #parse ('message.vm')
#end

protected ${descriptor.name}() {}

public static final native ${descriptor.name} getDefaultInstance();

@jsinterop.annotations.JsOverlay
public final $descriptor.name getDefaultInstanceForType() {
  return getDefaultInstance();
}

public native Builder toBuilder();

#foreach ($field in $descriptor.fields)
  @jsinterop.annotations.JsOverlay
  public static final int ${field.fieldNumberName}_FIELD_NUMBER = $field.number;
#end

## render fields
#foreach ($field in $descriptor.fields)
  #parse ("$field.getterTemplate()")
#end

##render one of getters
#foreach($oneOfDescriptor in $descriptor.oneOfs)
  #parse('oneof_getter.vm')
#end

## render extensions
#set ($extensions = $descriptor.extensions)
#parse('extension.vm')


public static native Builder newBuilder();

public static native Builder newBuilder($descriptor.name prototype);

@jsinterop.annotations.JsType(isNative=true)
public static final class Builder extends
    com.google.protobuf.GeneratedMessageLite.Builder<$descriptor.name, Builder> {

  protected Builder() {}

  @jsinterop.annotations.JsOverlay
  public final $descriptor.name getDefaultInstanceForType() {
    return getDefaultInstance();
  }

## render fields for builder
#foreach ($field in $descriptor.fields)
  #parse ("$field.getterTemplate()")

  @jsinterop.annotations.JsMethod(name = "clear${field.jsName}")
  public native Builder clear${field.name}();

  #if (${field.isRepeated()})
    #if (${field.isEnum()})
      @jsinterop.annotations.JsOverlay
      public final Builder set${field.name}(int index, ${field.unboxedType} value) {
        return internal_set${field.name}(index, ${field.unboxedType}.Internal_ClosureEnum.toClosureValue(value));
      }

      @jsinterop.annotations.JsMethod(name = "set${field.jsName}")
      private native Builder internal_set${field.name}(int index, ${field.unboxedType}.Internal_ClosureEnum value);

      @jsinterop.annotations.JsOverlay
      public final Builder add${field.name}(${field.unboxedType} value) {
        return internal_add${field.name}(${field.unboxedType}.Internal_ClosureEnum.toClosureValue(value));
      }

      @jsinterop.annotations.JsMethod(name = "add${field.jsName}")
      private native Builder internal_add${field.name}(${field.unboxedType}.Internal_ClosureEnum value);
    #else

      @jsinterop.annotations.JsMethod(name = "add${field.jsName}")
      public native Builder add${field.name}(${field.unboxedType} value);

      @jsinterop.annotations.JsMethod(name = "set${field.jsName}")
      public native Builder set${field.name}(int index, ${field.unboxedType} value);

      #if (${field.isMessage()})
        @jsinterop.annotations.JsMethod(name = "add${field.jsName}")
        public native Builder add${field.name}(${field.unboxedType}.Builder builder);

        @jsinterop.annotations.JsMethod(name = "set${field.jsName}")
        public native Builder set${field.name}(int index, ${field.unboxedType}.Builder builder);
      #end
    #end
    @jsinterop.annotations.JsOverlay
    public final Builder addAll${field.name}(java.lang.Iterable<${field.boxedType}> values) {
      com.google.protobuf.GeneratedMessageLite.Internal.addAll(values, this::add${field.name});
      return this;
    }
  #else
    #if (${field.isEnum()})
      @jsinterop.annotations.JsOverlay
      public final Builder set${field.name}(${field.unboxedType} value) {
        return internal_set${field.name}(${field.unboxedType}.Internal_ClosureEnum.toClosureValue(value));
      }

      @jsinterop.annotations.JsMethod(name = "set${field.jsName}")
      private native Builder internal_set${field.name}(${field.unboxedType}.Internal_ClosureEnum value);
    #else
      @jsinterop.annotations.JsMethod(name = "set${field.jsName}")
      public native Builder set${field.name}(${field.unboxedType} value);
    #end
    #if (${field.isMessage()})
      @jsinterop.annotations.JsMethod(name = "set${field.jsName}")
      public native Builder set${field.name}(${field.unboxedType}.Builder builder);
    #end
  #end

#end
##render one of getters
#foreach($oneOfDescriptor in $descriptor.oneOfs)
  #parse('oneof_getter.vm')
#end
}
}
