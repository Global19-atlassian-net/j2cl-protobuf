
/**
 * @fileoverview
 * @suppress {lateProvide}
 *
 * Generated code DO NOT EDIT
 * Generated by
 * //java/com/google/protobuf/contrib/immutablejs/generator:ImmutableJspbCompiler
 */
goog.module('improto.protobuf.contrib.immutablejs.protos.TestCommentsWithDangerousCharacters');

const proto_im_InternalMessage = goog.require('proto.im.internal.InternalMessage');
const proto_im_Message = goog.require('proto.im.Message');
const goog_math_Long = goog.require('goog.math.Long');

/**
 * Expected message with escaped characters: &#64;
 * @struct
 * @final
 * @extends {proto_im_InternalMessage<!TestCommentsWithDangerousCharacters,
 * !TestCommentsWithDangerousCharacters.Builder>}
 */
class TestCommentsWithDangerousCharacters extends proto_im_InternalMessage {
  /**
   * Parses the json as a message of type TestCommentsWithDangerousCharacters.
   * @param {string} json
   * @return {!TestCommentsWithDangerousCharacters}
   */
  static parse(json) {
    return proto_im_InternalMessage.parseBase(
        TestCommentsWithDangerousCharacters, json);
  }

  /**
   * Returns a builder for this message.
   * @param {!TestCommentsWithDangerousCharacters=} message
   * @return {!TestCommentsWithDangerousCharacters.Builder}
   */
  static newBuilder(
      message = TestCommentsWithDangerousCharacters.getDefaultInstance()) {
    return new TestCommentsWithDangerousCharacters.Builder(message);
  }

  /**
   * Returns the default instance for this message.
   * @return {!TestCommentsWithDangerousCharacters}
   */
  static getDefaultInstance() {
    return proto_im_InternalMessage.getDefaultInstanceForMessage(
        TestCommentsWithDangerousCharacters);
  }

  /**
   * @param {!Array<?>} data The array holding protobuf data.
   * @private
   */
  constructor(data) {
    super(data, -1, 0);
  }

  /**
   * Constructs a builder initialized with the current message.
   * @return {!TestCommentsWithDangerousCharacters.Builder}
   * @override
   */
  toBuilder() {
    return new TestCommentsWithDangerousCharacters.Builder(this);
  }


  /**
   * @return {boolean}
   */
  hasAField() {
    return this.internal_hasField(1);
  }

  /**
   * Expected field with escaped characters: &#64;*
   * @return {!number}
   */
  getAField() {
    return this.internal_getIntField(1);
  }


  /**
   * @return {boolean}
   */
  hasAString() {
    return this.internal_hasField(2);
  }

  /**
   * Expected field with escaped characters: &#64;*
   * @return {!string}
   */
  getAString() {
    return this.internal_getStringField(2);
  }


  /**
   * @return {boolean}
   */
  hasASecondString() {
    return this.internal_hasField(3);
  }

  /**
   * Expected field with escaped characters: &#64;*
   * @return {!string}
   */
  getASecondString() {
    return this.internal_getStringField(3);
  }


  /**
   * @return {boolean}
   */
  hasAnotherField() {
    return this.internal_hasField(4);
  }

  /**
   * Expected multi-line field comment with escapated characters.  A Nearby
   * Rooster is in high definition.  A Faraway Rooster is out of focus.
   * &#64;&#64;&#64;&#64;&#64;*****  this is a comment containing a block
   * comment  /&#42;   * hello I am a comment   * and I continue onto the next
   * line.   *&#47;
   * @return {!goog_math_Long}
   */
  getAnotherField() {
    return this.internal_getInt52LongField(4);
  }

  /**
   * @return {!TestCommentsWithDangerousCharacters.AOneofCase}
   */
  getAOneofCase() {
    if (this.internal_hasField(2)) {
      return TestCommentsWithDangerousCharacters.AOneofCase.A_STRING;
    }
    if (this.internal_hasField(3)) {
      return TestCommentsWithDangerousCharacters.AOneofCase.A_SECOND_STRING;
    }
    return TestCommentsWithDangerousCharacters.AOneofCase.AONEOF_NOT_SET;
  }
}


/**
 * Expected oneof with escaped characters: &#64;*
 * @enum {number}
 */
TestCommentsWithDangerousCharacters.AOneofCase = {
  AONEOF_NOT_SET: 0,
  A_STRING: 2,
  A_SECOND_STRING: 3,
};

// Extensions start

// Extensions end

/**
 * @override
 * @struct
 * @final
 * @extends {proto_im_InternalMessage.Builder<!TestCommentsWithDangerousCharacters,
 * !TestCommentsWithDangerousCharacters.Builder>}
 */
TestCommentsWithDangerousCharacters.Builder =
    class extends proto_im_InternalMessage.Builder {
  /**
   * @param {!TestCommentsWithDangerousCharacters} message
   * @private
   */
  constructor(message) {
    super(message);
  }

  /**
   * @return {boolean}
   */
  hasAField() {
    return this.message.hasAField();
  }

  /**
   * Expected field with escaped characters: &#64;*
   * @return {!number}
   */
  getAField() {
    return this.message.getAField();
  }

  /**
   * Expected field with escaped characters: &#64;*
   * @param {!number} value
   * @return {!TestCommentsWithDangerousCharacters.Builder}
   */
  setAField(value) {
    return this.internal_setIntField(1, value);
  }

  /**
   * @return {!TestCommentsWithDangerousCharacters.Builder}
   */
  clearAField() {
    return this.internal_clearField(1);
  }
  /**
   * @return {boolean}
   */
  hasAString() {
    return this.message.hasAString();
  }

  /**
   * Expected field with escaped characters: &#64;*
   * @return {!string}
   */
  getAString() {
    return this.message.getAString();
  }

  /**
   * Expected field with escaped characters: &#64;*
   * @param {!string} value
   * @return {!TestCommentsWithDangerousCharacters.Builder}
   */
  setAString(value) {
    this.internal_clearAOneofCase();
    return this.internal_setStringField(2, value);
  }

  /**
   * @return {!TestCommentsWithDangerousCharacters.Builder}
   */
  clearAString() {
    return this.internal_clearField(2);
  }
  /**
   * @return {boolean}
   */
  hasASecondString() {
    return this.message.hasASecondString();
  }

  /**
   * Expected field with escaped characters: &#64;*
   * @return {!string}
   */
  getASecondString() {
    return this.message.getASecondString();
  }

  /**
   * Expected field with escaped characters: &#64;*
   * @param {!string} value
   * @return {!TestCommentsWithDangerousCharacters.Builder}
   */
  setASecondString(value) {
    this.internal_clearAOneofCase();
    return this.internal_setStringField(3, value);
  }

  /**
   * @return {!TestCommentsWithDangerousCharacters.Builder}
   */
  clearASecondString() {
    return this.internal_clearField(3);
  }
  /**
   * @return {boolean}
   */
  hasAnotherField() {
    return this.message.hasAnotherField();
  }

  /**
   * Expected multi-line field comment with escapated characters.  A Nearby
   * Rooster is in high definition.  A Faraway Rooster is out of focus.
   * &#64;&#64;&#64;&#64;&#64;*****  this is a comment containing a block
   * comment  /&#42;   * hello I am a comment   * and I continue onto the next
   * line.   *&#47;
   * @return {!goog_math_Long}
   */
  getAnotherField() {
    return this.message.getAnotherField();
  }

  /**
   * Expected multi-line field comment with escapated characters.  A Nearby
   * Rooster is in high definition.  A Faraway Rooster is out of focus.
   * &#64;&#64;&#64;&#64;&#64;*****  this is a comment containing a block
   * comment  /&#42;   * hello I am a comment   * and I continue onto the next
   * line.   *&#47;
   * @param {!goog_math_Long} value
   * @return {!TestCommentsWithDangerousCharacters.Builder}
   */
  setAnotherField(value) {
    return this.internal_setInt52LongField(4, value);
  }

  /**
   * @return {!TestCommentsWithDangerousCharacters.Builder}
   */
  clearAnotherField() {
    return this.internal_clearField(4);
  }

  /**
   * @return {!TestCommentsWithDangerousCharacters.AOneofCase}
   */
  getAOneofCase() {
    return this.message.getAOneofCase();
  }

  /**
   * @private
   */
  internal_clearAOneofCase() {
    this.internal_clearFields(2, 3);
  }
}



/**
 * Expected enum with escaped characters: &#64;*
 * @enum {number}
 */
TestCommentsWithDangerousCharacters.AnEnumWithDangerousCharacters = {
  AN_ENUM_UNDEFINED: 0,
  FIRST: 1,
  SECOND: 2
};


exports = TestCommentsWithDangerousCharacters;
